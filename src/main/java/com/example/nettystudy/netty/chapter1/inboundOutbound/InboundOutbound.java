package com.example.nettystudy.netty.chapter1.inboundOutbound;

/**
 * packageName : com.example.nettystudy.netty.chapter1
 * fileName : InboundOutbound
 * author : taeil
 * date : 2023/08/23
 * description :
 * =======================================================
 * DATE          AUTHOR                      NOTE
 * -------------------------------------------------------
 * 2023/08/23        taeil                   최초생성
 */
public class InboundOutbound {
    // 네티는 이벤트를 인바운드 이벤트와 아웃바운드 이벤트로 구분한 추상화 모델을 제공한다.
    // 즉, 네트워크 프로그램 개발자가 신경 써야 하는 이벤트들을 논리적으로 구분하여 고수준의 추상화 모델을 제공한다.
    // ex) 서버 개발자는 클라이언트로부터 데이터가 수신될 때 발생하는 이벤트에 관심이 있다면 인바운드 이벤트 중 하나인 데이터 수신 이벤트 메서드에서 데이터를 가공하는 코드를 작성하면 된다.
    // 네티는 사용자로 하여금 간단한 코드 작성만으로 안정적인 애플리케이션을 빠르게 개발할 수 있게 한다.

    // 네티는 데이터 손신을 아웃바운드 이벤트, 데이터 수신을 인바운드 이벤트로 정의하고 있다.
    // 인바운드 이벤트와 아웃바운드 이벤트는 모두 프로그램을 기준으로 정의된다.

    // InboundOutbound.png 사진 참조
    // 클라이언트 소켓이 서버로 "지금 몇시니?" 라는 데이터를 송신. -> 클라이언트 애플리케이션의 아웃바운드 이벤트에 해당!
    // 서버는 서버 소켓으로 수신한 데이터에 대한 응답으로 "지금 10시야!" 라는 데이터를 돌려준다. -> 서버 애플리케이션의 아웃바운드 이벤트에 해당!

    // 클라이언트 애플리케이션은 "지금 10시야!" 라는 데이터를 인바운드 이벤트를 통해서 수신한다.
    // 즉, 인바운드와 아웃바운드의 구분은 애플리케이션의 소켓 채널을 기준으로 정의된다.
}